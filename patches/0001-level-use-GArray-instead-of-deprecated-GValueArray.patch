diff -urp a/gst/level/gstlevel.c b/gst/level/gstlevel.c
--- a/gst/level/gstlevel.c	2023-08-11 22:29:55.470060598 +0900
+++ b/gst/level/gstlevel.c	2023-08-11 22:31:15.321532034 +0900
@@ -34,13 +34,13 @@
  * * #GstClockTime `duration`: the duration of the buffer.
  * * #GstClockTime `endtime`: the end time of the buffer that triggered the message as
  *   stream time (this is deprecated, as it can be calculated from stream-time + duration)
- * * #GValueArray of #gdouble `peak`: the peak power level in dB for each channel
- * * #GValueArray of #gdouble `decay`: the decaying peak power level in dB for each channel
+ * * #GArray of #gdouble `peak`: the peak power level in dB for each channel
+ * * #GArray of #gdouble `decay`: the decaying peak power level in dB for each channel
  *   The decaying peak level follows the peak level, but starts dropping if no
  *   new peak is reached after the time given by the #GstLevel:peak-ttl.
  *   When the decaying peak level drops, it does so at the decay rate as
  *   specified by the #GstLevel:peak-falloff.
- * * #GValueArray of #gdouble `rms`: the Root Mean Square (or average power) level in dB
+ * * #GArray of #gdouble `rms`: the Root Mean Square (or average power) level in dB
  *   for each channel
  *
  * ## Example application
@@ -53,10 +53,6 @@
 #include "config.h"
 #endif
 
-/* FIXME 0.11: suppress warnings for deprecated API such as GValueArray
- * with newer GLib versions (>= 2.31.0) */
-#define GLIB_DISABLE_DEPRECATION_WARNINGS
-
 #include <string.h>
 #include <math.h>
 #include <gst/gst.h>
@@ -542,16 +538,16 @@ gst_level_message_new (GstLevel * level,
       "running-time", G_TYPE_UINT64, running_time,
       "duration", G_TYPE_UINT64, duration, NULL);
 
-  g_value_init (&v, G_TYPE_VALUE_ARRAY);
-  g_value_take_boxed (&v, g_value_array_new (0));
+  g_value_init (&v, G_TYPE_ARRAY);
+  g_value_take_boxed (&v, g_array_new (TRUE, TRUE, sizeof(GArray)));
   gst_structure_take_value (s, "rms", &v);
 
-  g_value_init (&v, G_TYPE_VALUE_ARRAY);
-  g_value_take_boxed (&v, g_value_array_new (0));
+  g_value_init (&v, G_TYPE_ARRAY);
+  g_value_take_boxed (&v, g_array_new (TRUE, TRUE, sizeof(GArray)));
   gst_structure_take_value (s, "peak", &v);
 
-  g_value_init (&v, G_TYPE_VALUE_ARRAY);
-  g_value_take_boxed (&v, g_value_array_new (0));
+  g_value_init (&v, G_TYPE_ARRAY);
+  g_value_take_boxed (&v, g_array_new (TRUE, TRUE, sizeof(GArray)));
   gst_structure_take_value (s, "decay", &v);
 
   return gst_message_new_element (GST_OBJECT (level), s);
@@ -563,7 +559,7 @@ gst_level_message_append_channel (GstMes
 {
   const GValue *array_val;
   GstStructure *s;
-  GValueArray *arr;
+  GArray *arr;
   GValue v = { 0, };
 
   g_value_init (&v, G_TYPE_DOUBLE);
@@ -571,19 +567,19 @@ gst_level_message_append_channel (GstMes
   s = (GstStructure *) gst_message_get_structure (m);
 
   array_val = gst_structure_get_value (s, "rms");
-  arr = (GValueArray *) g_value_get_boxed (array_val);
+  arr = (GArray *) g_value_get_boxed (array_val);
   g_value_set_double (&v, rms);
-  g_value_array_append (arr, &v);       /* copies by value */
+  g_array_append_val (arr, v);       /* copies by value */
 
   array_val = gst_structure_get_value (s, "peak");
-  arr = (GValueArray *) g_value_get_boxed (array_val);
+  arr = (GArray *) g_value_get_boxed (array_val);
   g_value_set_double (&v, peak);
-  g_value_array_append (arr, &v);       /* copies by value */
+  g_array_append_val (arr, v);       /* copies by value */
 
   array_val = gst_structure_get_value (s, "decay");
-  arr = (GValueArray *) g_value_get_boxed (array_val);
+  arr = (GArray *) g_value_get_boxed (array_val);
   g_value_set_double (&v, decay);
-  g_value_array_append (arr, &v);       /* copies by value */
+  g_array_append_val (arr, v);       /* copies by value */
 
   g_value_unset (&v);
 }
